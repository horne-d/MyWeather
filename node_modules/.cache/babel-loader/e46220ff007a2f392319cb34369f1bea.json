{"ast":null,"code":"var _jsxFileName = \"/Users/danielhorne/Desktop/applications/myweather/src/App.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport Displayweather from './components/DisplayWeather.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coords: {\n        latitude: 4,\n        longitude: 30\n      },\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        this.setState({\n          coords: newCoords\n        });\n        Axios.get(`http://api.weatherstack.com/autocomplete?access_key=d1ac016511a944aa37d30232c10a1b4c&query=london`).then(res => {\n          let weatherData = {\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n          };\n          this.setState({\n            data: weatherData\n          });\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-center position-ref full-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title m-b-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, \"MyWeather\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }\n    }, \"Your Weekly Forecast\")), /*#__PURE__*/React.createElement(Displayweather, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danielhorne/Desktop/applications/myweather/src/App.js"],"names":["React","Axios","Displayweather","App","Component","state","coords","latitude","longitude","data","componentDidMount","navigator","geolocation","getCurrentPosition","position","newCoords","setState","get","then","res","weatherData","temperature","current","description","weather_descriptions","location","name","region","country","wind_speed","pressure","precip","humidity","img","weather_icons","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,CADJ;AAENC,QAAAA,SAAS,EAAE;AAFL,OADF;AAKNC,MAAAA,IAAI,EAAE;AALA,KAFwB;AAAA;;AAYhCC,EAAAA,iBAAiB,GAAI;AACnB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,YAAIC,SAAS,GAAG;AACdR,UAAAA,QAAQ,EAAEO,QAAQ,CAACR,MAAT,CAAgBC,QADZ;AAEdC,UAAAA,SAAS,EAAEM,QAAQ,CAACR,MAAT,CAAgBE;AAFb,SAAhB;AAIA,aAAKQ,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAACS;AAAT,SAAd;AAGAd,QAAAA,KAAK,CAACgB,GAAN,CAAW,mGAAX,EAA+GC,IAA/G,CAAoHC,GAAG,IAAI;AAEzH,cAAIC,WAAW,GAAG;AAChBC,YAAAA,WAAW,EAAEF,GAAG,CAACV,IAAJ,CAASa,OAAT,CAAiBD,WADd;AAEhBE,YAAAA,WAAW,EAAEJ,GAAG,CAACV,IAAJ,CAASa,OAAT,CAAiBE,oBAAjB,CAAsC,CAAtC,CAFG;AAGhBC,YAAAA,QAAQ,EAAEN,GAAG,CAACV,IAAJ,CAASgB,QAAT,CAAkBC,IAHZ;AAIhBC,YAAAA,MAAM,EAAER,GAAG,CAACV,IAAJ,CAASgB,QAAT,CAAkBE,MAJV;AAKhBC,YAAAA,OAAO,EAAET,GAAG,CAACV,IAAJ,CAASgB,QAAT,CAAkBG,OALX;AAMhBC,YAAAA,UAAU,EAAEV,GAAG,CAACV,IAAJ,CAASa,OAAT,CAAiBO,UANb;AAOhBC,YAAAA,QAAQ,EAAEX,GAAG,CAACV,IAAJ,CAASa,OAAT,CAAiBQ,QAPX;AAQhBC,YAAAA,MAAM,EAAEZ,GAAG,CAACV,IAAJ,CAASa,OAAT,CAAiBS,MART;AAShBC,YAAAA,QAAQ,EAAEb,GAAG,CAACV,IAAJ,CAASa,OAAT,CAAiBU,QATX;AAUhBC,YAAAA,GAAG,EAAEd,GAAG,CAACV,IAAJ,CAASa,OAAT,CAAiBY;AAVN,WAAlB;AAaA,eAAKlB,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAEW;AAAR,WAAd;AAED,SAjBD;AAmBD,OA3BD;AA4BD;AACF;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CADJ,eAMI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADN,CADF,CADF;AAcD;;AA5D+B;;AAgElC,eAAehC,GAAf","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport Displayweather from './components/DisplayWeather.js';\n\nclass App extends React.Component {\n\n  state = {\n    coords: {\n      latitude: 4,\n      longitude: 30\n    },\n    data: {\n\n    }\n  }\n\n  componentDidMount () {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n        this.setState({ coords:newCoords });\n\n\n        Axios.get(`http://api.weatherstack.com/autocomplete?access_key=d1ac016511a944aa37d30232c10a1b4c&query=london`).then(res => {\n          \n          let weatherData = {\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n          }\n\n          this.setState({ data: weatherData });\n\n        })\n\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"flex-center position-ref full-height\">\n              <div className=\"content\">\n                  <div className=\"title m-b-md\">\n                      MyWeather\n                      <div className=\"subtitle\">Your Weekly Forecast</div>\n                  </div>\n\n                  <Displayweather />\n              </div>\n          </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}